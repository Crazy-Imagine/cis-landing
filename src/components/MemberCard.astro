---
import { Image } from 'astro:assets';
import Typography from './Typography.astro';
import type { Member } from '@/types/strapi/Member';

interface Props {
  member: Member;
}

const { member } = Astro.props;

const attributes = member.attributes;
const avatar = member.attributes.avatar.data[0].attributes;
---

<div class="card h-[480px] w-full rounded-lg bg-white shadow-lg">
  <div class="card-inner">
    <div class="card-front">
      <Image
        src={avatar.url}
        alt={`${attributes.name} - ${attributes.role}`}
        width={avatar.width}
        height={avatar.height}
        class="w-full rounded-t-lg object-cover"
      />
      <div class="mt-auto px-5 py-7">
        <Typography as="p" variant="caption" class="mb-1 text-primary">
          {attributes.name}
        </Typography>

        <Typography as="p" variant="accent" class="font-nexaLight text-primary">
          {member.attributes.role}
        </Typography>
      </div>
    </div>

    <div class="card-back p-10">
      <Typography as="p" variant="caption" class="text-primary">
        {attributes.name}
      </Typography>
      <Typography as="p" variant="accent" class="font-nexaLight text-primary">
        {attributes.role}
      </Typography>
      <Typography as="p" variant="paragraph2" class="mt-2.5 text-grayish">
        {attributes.cardDescription}
      </Typography>
    </div>
  </div>
</div>

<style>
  .card {
    perspective: 1000px;
  }
  .card-inner {
    @apply relative flex h-full w-full flex-col transition duration-500;
    transform-style: preserve-3d;
  }
  .card:hover .card-inner {
    transform: rotateY(180deg);
  }
  .card-front,
  .card-back {
    @apply absolute inset-0 flex h-full w-full flex-col rounded-lg bg-white shadow-md;
    backface-visibility: hidden;
  }
  .card-front {
    background-color: white;
  }
  .card-back {
    transform: rotateY(180deg);
  }
</style>

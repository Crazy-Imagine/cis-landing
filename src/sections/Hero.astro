---
import Typography from '@/components/Typography.astro';
import type { PageWithHero } from '@/types/Hero';
import { HERO_SECTION } from '@/consts/hero-sections';
import { getLangFromUrl, useTranslations } from '@/i18n/utils';

interface Props {
  page: PageWithHero;
  scheduleCall?: boolean;
}

const { page, scheduleCall = false } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const hero = HERO_SECTION[page];
---

<section
  class="relative -mt-[var(--header-height)] h-fit w-full bg-hero bg-cover bg-center bg-no-repeat p-4 pt-[var(--header-height)] text-white sm:h-[680px] md:px-10 lg:pb-[var(--header-height)] 2xl:px-0"
>
  <div class="absolute inset-0 z-10 bg-gradient-to-b from-transparent to-primary-with-transparency">
  </div>

  <div
    class="relative z-10 mx-auto hidden h-full w-full items-center rounded-xl 2xl:container sm:flex sm:bg-secondary"
  >
    <div class="gap-4 sm:pl-8 lg:pl-14 xl:pl-[100px]">
      <Typography class="font-bold capitalize" as="h1" variant="h1">
        {t(`hero.${page}-title` as const)}
      </Typography>

      <Typography class="my-10 uppercase" as="p" variant="h6">
        {t(`hero.${page}-subtitle` as const)}
      </Typography>

      <slot name="button" />
    </div>

    <div class="ml-auto flex-shrink basis-[350px] place-self-end">
      <img
        class="h-auto w-full max-w-[349px]"
        width={hero.width}
        height={hero.height}
        src={hero.img}
        alt={t(`hero.${page}-img-alt` as const)}
      />
    </div>
  </div>

  <Typography class="relative z-20 font-bold capitalize sm:hidden" as="h1" variant="h1">
    {t(`hero.${page}-title` as const)}
  </Typography>

  <Typography class="relative z-20 my-10 uppercase sm:hidden" as="p" variant="h6">
    {t(`hero.${page}-subtitle` as const)}
  </Typography>

  <div class="relative z-20 flex items-center sm:hidden">
    <div class="flex flex-shrink-0 flex-grow place-content-center">
      <slot name="button" />
    </div>

    <div
      class:list={[
        'flex place-content-end',
        {
          'flex-shrink flex-grow-0': scheduleCall,
          'basis-1/2': !scheduleCall,
        },
      ]}
    >
      <img
        width={hero.width}
        height={hero.height}
        src={hero.img}
        alt={t(`hero.${page}-img-alt` as const)}
      />
    </div>
  </div>
</section>

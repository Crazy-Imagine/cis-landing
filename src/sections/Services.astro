---
import type { ImageMetadata } from 'astro';
import ImageOverBackground from '@/components/ImageOverBackground.astro';
import ResponsiveContainer from '@/components/ResponsiveContainer.astro';
import Typography from '@/components/Typography.astro';
import { getLangFromUrl, useTranslations } from '@/i18n/utils';

interface Props {
  hasCapabilities?: boolean;
  class?: string;
  img: {
    bgColor?: string;
    class?: string;
    path: string;
    alt: string;
  };
}

const {
  hasCapabilities = false,
  img: { class: imgClass, bgColor, ...img },
} = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/ui/*.webp');
if (!images[img.path])
  throw new Error(`"${img.path}" does not exist in glob: "/src/assets/ui/*.webp"`);
---

<ResponsiveContainer class={Astro.props.class}>
  <div class="flex flex-col gap-10 md:flex-row md:gap-20">
    <ImageOverBackground bgColor={bgColor} class={imgClass} localImage={img} />

    <div class="flex flex-col justify-center text-center md:text-left">
      {
        hasCapabilities && (
          <Typography
            as="p"
            class="mb-4 uppercase tracking-wider text-blue-purple"
            variant="caption"
          >
            {t('services.capabilities')}
          </Typography>
        )
      }
      <slot name="main-text" />
      <slot name="description" />
    </div>
  </div>

  <slot name="cards" />

  <slot />
</ResponsiveContainer>
